{"version":3,"sources":["utilities/index.js","actions/index.js","reducers/game-reducer.js","reducers/index.js","jsx/head.jsx","jsx/square.jsx","jsx/next.jsx","jsx/board.jsx","jsx/score.jsx","jsx/controls.jsx","jsx/overlay.jsx","jsx/app.jsx","serviceWorker.js","index.js"],"names":["shapes","grid_default","array","row","push","col","random_shape","min","max","length","Math","floor","random","default_state","grid","shape","rotation","x","y","next_shape","is_running","score","speed","game_over","can_move_to","current_shape","proposed_x","proposed_y","possible_row","undefined","pause","type","resume","restart","move_up","move_left","move_down","move_right","rotate_left","rotate_right","game_reducer","state","arguments","action","Object","objectSpread","maybe_y","obj","block_off_grid","block","new_grid","toConsumableArray","gameOver","add_block_to_grid","newState","new_state","completedRows","indexOf","splice","unshift","Array","fill","check_rows","new_rotation_l","next_rotation","new_rotation_r","prev_rotation","reducers","combineReducers","game","Head","react_default","a","createElement","className","Component","Square","classes","concat","this","props","color","Next","map","row_array","square","jsx_square","key","make_grid","connect","Board","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","last_update_time","progress_time","window","requestAnimationFrame","update","bind","_this$props","block_color","block_x","block_y","k","time","delta_time","Score","onClick","e","Controls","document","addEventListener","event","keyName","_this2","_this$props2","Overlay","message","is_hidden","store","createStore","App","es","head","next","board","jsx_score","controls","overlay","Boolean","location","hostname","match","ReactDOM","render","jsx_app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2RACaA,EAAS,CAErB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACR,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGR,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACR,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGR,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACR,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGR,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACR,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGR,CAAC,CA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","file":"static/js/main.fbe22f82.chunk.js","sourcesContent":["// Define block shapes and their rotations as arrays.\nexport const shapes = [\n\t// none\n\t[[[0,0,0,0],\n\t\t[0,0,0,0],\n\t\t[0,0,0,0],\n\t\t[0,0,0,0]]],\n\n\t// I\n\t[[[0,0,0,0],\n\t\t[1,1,1,1],\n\t\t[0,0,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,0,0],\n\t\t[0,1,0,0],\n\t\t[0,1,0,0],\n\t\t[0,1,0,0]]],\n\n\t// T\n\t[[[0,0,0,0],\n\t\t[1,1,1,0],\n\t\t[0,1,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,0,0],\n\t\t[1,1,0,0],\n\t\t[0,1,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,0,0],\n\t\t[1,1,1,0],\n\t\t[0,0,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,0,0],\n\t\t[0,1,1,0],\n\t\t[0,1,0,0],\n\t\t[0,0,0,0]]],\n\n\t// L\n\t[[[0,0,0,0],\n\t\t[1,1,1,0],\n\t\t[1,0,0,0],\n\t\t[0,0,0,0]],\n\n\t[[1,1,0,0],\n\t\t[0,1,0,0],\n\t\t[0,1,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,0,1,0],\n\t\t[1,1,1,0],\n\t\t[0,0,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,0,0],\n\t\t[0,1,0,0],\n\t\t[0,1,1,0],\n\t\t[0,0,0,0]]],\n\n\t// J\n\t[[[1,0,0,0],\n\t\t[1,1,1,0],\n\t\t[0,0,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,1,0],\n\t\t[0,1,0,0],\n\t\t[0,1,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,0,0,0],\n\t\t[1,1,1,0],\n\t\t[0,0,1,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,0,0],\n\t\t[0,1,0,0],\n\t\t[1,1,0,0],\n\t\t[0,0,0,0]]],\n\n\t// Z\n\t[[[0,0,0,0],\n\t\t[1,1,0,0],\n\t\t[0,1,1,0],\n\t\t[0,0,0,0]],\n\n\t[[0,0,1,0],\n\t\t[0,1,1,0],\n\t\t[0,1,0,0],\n\t\t[0,0,0,0]]],\n\n\t// S\n\t[[[0,0,0,0],\n\t\t[0,1,1,0],\n\t\t[1,1,0,0],\n\t\t[0,0,0,0]],\n\n\t[[0,1,0,0],\n\t\t[0,1,1,0],\n\t\t[0,0,1,0],\n\t\t[0,0,0,0]]],\n\n\t// O\n\t[[[0,1,1,0],\n\t\t[0,1,1,0],\n\t\t[0,0,0,0],\n\t\t[0,0,0,0]]]\n]\n\n// Use random\nexport const random = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n// Returns the default grid\nexport const grid_default = () => {\n\tconst rows = 18\n\tconst cols = 10\n\tconst array = []\n\n\tfor (let row = 0; row < rows; row++) {\n\t\tarray.push([])\n\t\tfor (let col = 0; col < cols; col++) {\n\t\t\tarray[row].push(0)\n\t\t}\n\t}\n\n\treturn array\n}\n\n// Return the index of a random shape from 1 to the number of items in `shapes`\n// We don't want the first item, which is an empty shape\nexport const random_shape = () => {\n\treturn random(1, shapes.length - 1)\n}\n\n// Return the default state for the game\nexport const default_state = () => {\n\treturn {\n\t\t// Create an empty grid\n\t\tgrid: grid_default(),\n\t\t// Get a new random shape\n\t\tshape: random_shape(),\n\t\t// set rotation of the shape to 0\n\t\trotation: 0,\n\t\t// set the 'x' position of the shape to 5 and y to -4, which puts the shape in the center of the grid, above the top\n\t\tx: 5,\n\t\ty: -4,\n\t\t// set the index of the next shape to a new random shape\n\t\tnext_shape: random_shape(),\n\t\t// Tell the game that it's currently running\n\t\tis_running: true,\n\t\t// Set the score to 0\n\t\tscore: 0,\n\t\t// Set the default speed\n\t\tspeed: 100,\n\t\t// Game isn't over yet\n\t\tgame_over: false\n\t}\n}\n\n// Returns the next rotation for a shape\n// rotation can't exceed the last index of the the rotations for the given shape.\nexport const next_rotation = (shape, rotation) => {\n\tconst length = shapes[shape].length\n\treturn (rotation + length + 1) % length\n}\n\nexport const prev_rotation = (shape, rotation) => {\n\tconst length = shapes[shape].length\n\treturn (rotation + length - 1) % length\n}\n\nexport const can_move_to = (shape, grid, x, y, rotation) => {\n\tconst current_shape = shapes[shape][rotation]\n\t// Loop through all rows and cols of the **shape**\n\tfor (let row = 0; row < current_shape.length; row++) {\n\t\tfor (let col = 0; col < current_shape[row].length; col++) {\n\t\t\t// Look for a 1 here\n\t\t\tif (current_shape[row][col] !== 0) {\n\t\t\t\t// x offset on grid\n\t\t\t\tconst proposed_x = col + x\n\t\t\t\t// y offset on grid\n\t\t\t\tconst proposed_y = row + y\n\t\t\t\tif (proposed_y < 0) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\t// Get the row on the grid\n\t\t\t\tconst possible_row = grid[proposed_y]\n\t\t\t\t// Check row exists\n\t\t\t\tif (possible_row) {\n\t\t\t\t\t// Check if this column in the row is undefined, if it's off the edges, 0, and empty\n\t\t\t\t\tif (possible_row[proposed_x] === undefined || possible_row[proposed_x] !== 0) {\n\t\t\t\t\t\t// undefined or not 0 and it's occupied we can't move here.\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\n\n// Adds current shape to grid\nexport const add_block_to_grid = (shape, grid, x, y, rotation) => {\n\t// At this point the game is not over\n\tlet block_off_grid = false\n\t// Get the block array\n\tconst block = shapes[shape][rotation]\n\t// Copy the grid\n\tconst new_grid = [...grid]\n\t// Map the Block onto the grid\n\tfor (let row = 0; row < block.length; row++) {\n\t\tfor (let col = 0; col < block[row].length; col++) {\n\t\t\tif (block[row][col]) {\n\t\t\t\tconst y_index = row + y\n\t\t\t\t// If the y_index is less than 0 part of the block\n\t\t\t\t// is off the top of the screen and the game is over\n\t\t\t\tif (y_index < 0) {\n\t\t\t\t\tblock_off_grid = true\n\t\t\t\t} else {\n\t\t\t\t\tnew_grid[row + y][col + x] = shape\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Return both the new_grid and the gameOver bool\n\treturn { grid: new_grid, gameOver: block_off_grid }\n}\n\n// Checks for completed rows and scores points\nexport const check_rows = (grid) => {\n\t// Points increase for each row completed\n\t// i.e. 40 points for completing one row, 100 points for two rows\n\tconst points = [0, 40, 100, 300, 1200]\n\tlet completedRows = 0\n\tfor (let row = 0; row < grid.length; row++) {\n\t\t// No empty cells means it can't find a 0, so the row must be complete!\n\t\tif (grid[row].indexOf(0) === -1) {\n\t\t\tcompletedRows += 1\n\t\t\t// Remove the row and add a new empty one at the top\n\t\t\tgrid.splice(row, 1)\n\t\t\tgrid.unshift(Array(10).fill(0))\n\t\t}\n\t}\n\treturn points[completedRows]\n}\n","export const PAUSE        = 'PAUSE'        // Pause the game\nexport const RESUME       = 'RESUME'       // Resume a paused game\nexport const RESTART      = 'RESTART'      // Restart Game\nexport const GAME_OVER    = 'GAME_OVER'    // The game is over\nexport const MOVE_UP      = 'MOVE_UP'      // [w]/[↑] Slow piece's descent\nexport const MOVE_LEFT    = 'MOVE_LEFT'    // [a]/[←] Move piece left\nexport const MOVE_DOWN    = 'MOVE_DOWN'    // [s]/[↓] Speed up piece's descent\nexport const MOVE_RIGHT   = 'MOVE_RIGHT'   // [d]/[→] Move piece right\nexport const ROTATE_LEFT  = 'ROTATE_LEFT'  // [q] Rotate piece left\nexport const ROTATE_RIGHT = 'ROTATE_RIGHT' // [e] Rotate piece right\n\nexport const pause = () => {\n\treturn { type: PAUSE }\n}\n\nexport const resume = () => {\n\treturn { type: RESUME }\n}\n\nexport const restart = () => {\n\treturn { type: RESTART }\n}\n\nexport const game_over = () => {\n\treturn { type: GAME_OVER }\n}\n\nexport const move_up = () => {\n\treturn { type: MOVE_UP }\n}\n\nexport const move_left = () => {\n\treturn { type: MOVE_LEFT }\n}\n\nexport const move_down = () => {\n\treturn { type: MOVE_DOWN }\n}\n\nexport const move_right = () => {\n\treturn { type: MOVE_RIGHT }\n}\n\nexport const rotate_left = () => {\n\treturn { type: ROTATE_LEFT }\n}\n\nexport const rotate_right = () => {\n\treturn { type: ROTATE_RIGHT }\n}\n","import {\n\tdefault_state,\n\tnext_rotation,\n\tprev_rotation,\n\tcan_move_to,\n\tadd_block_to_grid,\n\tcheck_rows,\n} from '../utilities'\n\nimport {\n\tPAUSE,\n\tRESUME,\n\tRESTART,\n\tGAME_OVER,\n\tMOVE_UP,\n\tMOVE_LEFT,\n\tMOVE_RIGHT,\n\tMOVE_DOWN,\n\tROTATE_LEFT,\n\tROTATE_RIGHT } from '../actions'\n\nconst game_reducer = (state = default_state(), action) => {\n\tconst {\n\t\tshape,\n\t\tgrid,\n\t\tx,\n\t\ty,\n\t\trotation,\n\t\tnext_shape,\n\t\tscore,\n\t\tis_running\n\t} = state\n\n\tswitch(action.type) {\n\t\tcase PAUSE:\n\t\t\treturn { ...state, is_running: false }\n\n\t\tcase RESUME:\n\t\t\treturn { ...state, is_running: true }\n\n\t\tcase RESTART:\n\t\t\treturn default_state()\n\n\t\tcase GAME_OVER:\n\t\t\treturn state\n\n\t\tcase MOVE_UP:\n\t\t\treturn state\n\n\t\tcase MOVE_LEFT:\n\t\t\t// subtract 1 from the x and check if this new position is possible by calling `can_move_to()\n\t\t\tif (can_move_to(shape, grid, x - 1, y, rotation)) {\n\t\t\t\t\treturn { ...state, x: x - 1 }\n\t\t\t}\n\t\t\treturn state\n\n\t\tcase MOVE_DOWN:\n\t\t\t// Get the next potential Y position\n\t\t\tconst maybe_y = y + 1\n\n\t\t\t// Check if the current block can move here\n\t\t\tif (can_move_to(shape, grid, x, maybe_y, rotation)) {\n\t\t\t\t\t// If so, move down & don't place the block\n\t\t\t\t\treturn { ...state, y: maybe_y }\n\t\t\t}\n\n\t\t\t// If not place the block\n\t\t\t// (this returns an object with a grid and gameover bool)\n\t\t\tconst obj = add_block_to_grid(shape, grid, x, y, rotation)\n\t\t\tconst new_grid = obj.grid\n\t\t\tconst game_over = obj.gameOver\n\n\t\t\t// check for game_over\n\t\t\tif (game_over) {\n\t\t\t\t// Game Over\n\t\t\t\tconst newState = { ...state }\n\t\t\t\tnewState.shape = 0\n\t\t\t\tnewState.grid = new_grid\n\t\t\t\treturn { ...state, game_over: true }\n\t\t\t}\n\n\t\t\t// reset some things to start a new shape/block\n\t\t\tconst new_state = default_state()\n\t\t\tnew_state.grid = new_grid\n\t\t\tnew_state.shape = next_shape\n\t\t\tnew_state.score = score\n\t\t\tnew_state.is_running = is_running\n\n\t\t\t// TODO: Check and Set level\n\t\t\t// Update the score based on if rows were completed or not\n\t\t\tnew_state.score = score + check_rows(new_grid)\n\n\t\t\treturn new_state\n\n\t\tcase MOVE_RIGHT:\n\t\t\tif (can_move_to(shape, grid, x + 1, y, rotation)) {\n\t\t\t\treturn { ...state, x: x + 1 }\n\t\t\t}\n\t\t\treturn state\n\n\t\tcase ROTATE_LEFT:\n\t\t\tconst new_rotation_l = next_rotation(shape, rotation)\n\t\t\tif (can_move_to(shape, grid, x, y, new_rotation_l)) {\n\t\t\t\treturn { ...state, rotation: new_rotation_l }\n\t\t\t}\n\t\t\treturn state\n\n\t\tcase ROTATE_RIGHT:\n\t\t\tconst new_rotation_r = prev_rotation(shape, rotation)\n\t\t\tif (can_move_to(shape, grid, x, y, new_rotation_r)) {\n\t\t\t\treturn { ...state, rotation: new_rotation_r }\n\t\t\t}\n\t\t\treturn state\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default game_reducer\n","import { combineReducers } from 'redux'\nimport game_reducer from '../reducers/game-reducer'\n\n\n// The state handled by `game_reducer` will be stored with the property name `game` on the Redux store.\nconst reducers = combineReducers({\n\tgame: game_reducer\n})\nexport default reducers\n","import React, { Component } from 'react'\n\nclass Head extends Component {\n\trender() {\n\t\treturn (\n\t\t<div className='head'>\n\t\t\t<h1>TETRIS</h1>\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Head\n","import React, { Component } from 'react'\n\n// Represents a grid square with a color\nclass Square extends Component {\n\trender () {\n\t\tconst classes = `square color-${this.props.color}`\n\t\treturn <div className={classes} />\n\t}\n}\n\nexport default Square\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Square from '../jsx/square.jsx'\nimport { shapes } from '../utilities/'\n\n// Map State to props\nconst map_state_to_props = (state) => {\n\treturn {\n\t\t// Return next_shape as shape\n\t\tshape: state.game.next_shape\n\t}\n}\n\n// Draws the \"next\" block view showing the next block to drop\nclass Next extends Component {\n\tmake_grid() {\n\t\t// deconstruct shape\n\t\tconst { shape } = this.props\n\t\t// get the array for this shape first rotation\n\t\tconst block = shapes[shape][0]\n\t\t// get the empty shape\n\t\tconst box = shapes[0][0]\n\n\t\t// Map the block to the grid\n\t\treturn box.map((row_array, row) => {\n\t\t\treturn row_array.map((square, col) => {\n\t\t\t\t// If there is a 1 use the shape index\n\t\t\t\tconst color = block[row][col] === 0 ? 0 : shape\n\t\t\t\treturn <Square key={`${row}${col}`} color={color} />\n\t\t\t})\n\t\t})\n\t}\n\n\t// The components generated in make_grid are rendered in div.board\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"next\">\n\t\t\t\t{this.make_grid()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(map_state_to_props)(Next)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport Square from '../jsx/square.jsx'\n\nimport { move_down } from '../actions/'\nimport { shapes } from '../utilities/'\n\n\n\n// Represents a 10 x 18 grid of grid squares\nclass Board extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.last_update_time = 0\n\t\tthis.progress_time = 0\n\t}\n\n\t// this function is built in and is called when mounted\n\tcomponentDidMount() {\n\t\twindow.requestAnimationFrame(this.update.bind(this))\n\t}\n\n\t// generates an array of 18 rows, each containing 10 Squares.\n\tmake_grid() {\n\t\t// collect properties mapped to props from state.\n\t\tconst { grid, shape, rotation, x, y } = this.props\n\n\t\t// get the block which is the current shape the player is controlling\n\t\tconst block = shapes[shape][rotation]\n\t\tconst block_color = shape\n\n\t\t// map rows\n\t\treturn grid.map((row_array, row) => {\n\n\t\t\t// map columns\n\t\t\treturn row_array.map((square, col) => {\n\n\t\t\t\t// Find the block x and y on the shape grid\n\t\t\t\t// By subtracting the x and y from the col and the row we get the position of the upper left corner of the block array as if it was superimposed over the main grid\n\t\t\t\tconst block_x = col - x\n\t\t\t\tconst block_y = row - y\n\t\t\t\tlet color = square\n\n\t\t\t\t// Map current falling block to grid.\n\t\t\t\t// For any squares that fall on the grid we need to look at the block array and see if there is a 1 in this case we use the block color.\n\t\t\t\tif (block_x >= 0 && block_x < block.length && block_y >= 0 && block_y < block.length) {\n\t\t\t\t\tcolor = block[block_y][block_x] === 0 ? color : block_color\n\t\t\t\t}\n\n\t\t\t\t// Generate a unique key for every block\n\t\t\t\tconst k = row * grid[0].length + col;\n\n\t\t\t\t// Generate a grid square\n\t\t\t\treturn <Square\n\t\t\t\t\t\t\t\tkey={k}\n\t\t\t\t\t\t\t\tsquare={square}\n\t\t\t\t\t\t\t\tcolor={color}>{square}\n\t\t\t\t\t\t\t</Square>\n\t\t\t})\n\t\t})\n\t}\n\n\t// Handle game updates\n\tupdate(time) {\n\t\t// If the game is is running we want to request a callback at the next animation frame.\n\t\twindow.requestAnimationFrame(this.update.bind(this))\n\t\tif (!this.props.is_running) {\n\t\t\treturn\n\t\t}\n\n\t\t// If last_update_time not been set, set it to the current time.\n\t\tif (!this.last_update_time) {\n\t\t\tthis.last_update_time = time\n\t\t}\n\n\t\t// Calculate delta time and progress time\n\t\tconst delta_time = time - this.last_update_time\n\t\tthis.progress_time += delta_time\n\n\t\t// If the progress time is greater than speed move the block down\n\t\tif (this.progress_time > this.props.speed) {\n\t\t\tthis.props.move_down()\n\t\t\tthis.progress_time = 0\n\t\t}\n\n\t\t// set the last update time.\n\t\tthis.last_update_time = time\n\t}\n\n\t// The components generated in make_grid are rendered in div.board\n\trender () {\n\t\treturn (\n\t\t\t<div className='board'>\n\t\t\t\t{this.make_grid()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst map_state_to_props = (state) => {\n\treturn {\n\t\tgrid: state.game.grid,\n\t\tshape: state.game.shape,\n\t\trotation: state.game.rotation,\n\t\tx: state.game.x,\n\t\ty: state.game.y,\n\t\tspeed: state.game.speed,\n\t\tis_running: state.game.is_running\n\t}\n}\n\nconst map_dispatch_to_props = () => {\n\treturn {\n\t\tmove_down\n\t}\n}\n\n// Connect the component\nexport default connect(map_state_to_props, map_dispatch_to_props())(Board)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { pause, resume, restart } from '../actions'\n\nclass Score extends Component {\n\n\trender() {\n\t\tconst {\n\t\t\tis_running,\n\t\t\tscore,\n\t\t\tresume,\n\t\t\tpause,\n\t\t\trestart,\n\t\t\tgame_over\n\t\t} = this.props\n\n\t\treturn (\n\t\t\t<div className=\"score\">\n\t\t\t\t<div>Score:{ score }</div>\n\t\t\t\t<div>Level: 1</div>\n\n\t\t\t\t{/* pause / resume button */}\n\t\t\t\t<button className=\"score-button\" onClick={(e) => {\n\t\t\t\t\tif (game_over) { return }\n\t\t\t\t\tis_running ? pause() : resume()\n\t\t\t\t}}>{is_running ? \"Pause\" : \"Resume\"}</button>\n\n\t\t\t\t{/* restart button */}\n\t\t\t\t<button className=\"score-button\" onClick={(e) => {\n\t\t\t\t\t\trestart()\n\t\t\t\t}}>Restart</button>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst map_state_to_props = (state) => {\n\treturn {\n\t\tscore: state.game.score,\n\t\tis_running: state.game.is_running,\n\t\tgame_over: state.game.game_over\n\t}\n}\n\nconst map_dispatch_to_props = () => {\n\treturn {\n\t\tpause,\n\t\tresume,\n\t\trestart\n\t}\n}\n\nexport default connect(map_state_to_props, map_dispatch_to_props())(Score)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tmove_up,\n\tmove_left,\n\tmove_right,\n\tmove_down,\n\trotate_left,\n\trotate_right\n} from '../actions'\n\nconst map_state_to_props = (state) => {\n\treturn {\n\t\tis_running: state.game.is_running,\n\t\tgame_over: state.game.game_over\n\t}\n}\n\nclass Controls extends Component {\n\t// this function is built in and is called when mounted\n\tcomponentDidMount() {\n\t\tdocument.addEventListener('keydown', (event) => {\n\t\t\tconst keyName = event.key;\n\n\t\t\tconst {\n\t\t\t\tmove_up,\n\t\t\t\tmove_down,\n\t\t\t\tmove_left,\n\t\t\t\tmove_right,\n\t\t\t\trotate_left,\n\t\t\t\trotate_right\n\t\t\t} = this.props\n\n\t\t\tswitch(keyName) {\n\t\t\t\tcase 'w':\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\tmove_up()\n\t\t\t\t\tbreak\n\n\t\t\t\tcase 's':\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tmove_down()\n\t\t\t\t\tbreak\n\n\t\t\t\tcase 'a':\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tmove_left()\n\t\t\t\t\tbreak\n\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\tmove_right()\n\t\t\t\t\tbreak\n\n\t\t\t\tcase 'q':\n\t\t\t\t\trotate_left()\n\t\t\t\t\tbreak\n\n\t\t\t\tcase 'e':\n\t\t\t\t\trotate_right()\n\t\t\t\t\tbreak\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}, false);\n\t}\n\n\trender() {\n\t\tconst { is_running, game_over } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"controls\">\n\t\t\t\t{/* up */}\n\t\t\t\t<button className=\"control-button\" onClick={(e) => {\n\t\t\t\t\tif (is_running && !game_over) {\n\t\t\t\t\t\tthis.props.move_up()\n\t\t\t\t\t}\n\t\t\t\t}}>Up</button>\n\n\t\t\t\t{/* down */}\n\t\t\t\t<button className=\"control-button\" onClick={(e) => {\n\t\t\t\t\tif (is_running && !game_over) {\n\t\t\t\t\t\tthis.props.move_down()\n\t\t\t\t\t}\n\t\t\t\t}}>Down</button>\n\n\t\t\t\t{/* left */}\n\t\t\t\t<button className=\"control-button\" onClick={(e) => {\n\t\t\t\t\tif (is_running && !game_over) {\n\t\t\t\t\t\tthis.props.move_left()\n\t\t\t\t\t}\n\t\t\t\t}}>Left</button>\n\n\t\t\t\t{/* right */}\n\t\t\t\t<button className=\"control-button\" onClick={(e) => {\n\t\t\t\t\tif (is_running && !game_over) {\n\t\t\t\t\t\tthis.props.move_right()\n\t\t\t\t\t}\n\t\t\t\t}}>Right</button>\n\n\t\t\t\t{/* spin left */}\n\t\t\t\t<button className=\"control-button\" onClick={(e) => {\n\t\t\t\t\tif (is_running && !game_over) {\n\t\t\t\t\t\tthis.props.rotate_left()\n\t\t\t\t\t}\n\t\t\t\t}}>Rotate Left</button>\n\n\t\t\t\t{/* spinR */}\n\t\t\t\t<button className=\"control-button\" onClick={(e) => {\n\t\t\t\t\tif (is_running && !game_over) {\n\t\t\t\t\t\tthis.props.rotate_right()\n\t\t\t\t\t}\n\t\t\t\t}}>Rotate Right</button>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst map_dispatch_to_props = () => {\n\treturn {\n\t\tmove_right,\n\t\tmove_left,\n\t\tmove_down,\n\t\tmove_up,\n\t\trotate_left,\n\t\trotate_right\n\t}\n}\n\nexport default connect(map_state_to_props, map_dispatch_to_props())(Controls)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\n// Displays a message\nclass Overlay extends Component {\n\n\trender() {\n\t\tconst { game_over, is_running } = this.props\n\t\tlet message = ''\n\t\tlet is_hidden = 'hidden'\n\n\t\t// If the game is over, show the popup saying \"Game Over\"\n\t\tif (game_over) {\n\t\t\tmessage = 'Game Over'\n\t\t\tis_hidden = ''\n\n\t\t// If the game isn't running, it must be paused, so show the popup saying \"Paused\"\n\t\t} else if (!is_running) {\n\t\t\tmessage = 'Paused'\n\t\t\tis_hidden = ''\n\n\t\t// Default message, will still be hidden\n\t\t} else {\n\t\t\tmessage = '???'\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={`overlay ${is_hidden}`}>\n\t\t\t\t<h1>{message}</h1>\n\t\t\t\t<p></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst map_state_to_props = (state) => {\n\treturn {\n\t\tgame_over: state.game.game_over,\n\t\tis_running: state.game.is_running\n\t}\n}\n\nconst map_dispatch_to_props = () => {\n\treturn { }\n}\n\nexport default connect(map_state_to_props, map_dispatch_to_props())(Overlay)\n","import React, { Component } from 'react'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport reducers from '../reducers/'\n\nimport '../css/app.css'\nimport Head from '../jsx/head.jsx'\nimport Next from '../jsx/next.jsx'\nimport Board from '../jsx/board.jsx'\nimport Score from '../jsx/score.jsx'\nimport Controls from '../jsx/controls.jsx'\nimport Overlay from '../jsx/overlay.jsx'\n\nconst store = createStore(reducers)\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<div className='app'>\n\t\t\t\t\t<Head />\n\t\t\t\t\t<Next />\n\t\t\t\t\t<Board />\n\t\t\t\t\t<Score />\n\t\t\t\t\t<Controls />\n\t\t\t\t\t<Overlay />\n\t\t\t\t</div>\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. app is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './css/index.css'\nimport App from './jsx/app.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}